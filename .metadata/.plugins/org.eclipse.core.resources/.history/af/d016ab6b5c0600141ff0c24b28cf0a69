package Main;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;

import FileManager.DirDistributor;
import Functions.FileReceiver;

import com.Functions.Payload;

import Functions.SocketConnector;

public class SrvMain {
	
	final public static String homeDir = "D:/ssServerHome/";
	
	public static String snapshotDir = "D:/ssServerHome/";
	public static ServerSocket listenSocket;
	public static Socket connSocket;
	
	public static void main(String args[]) throws Exception{
		
		listenSocket = new ServerSocket(12345);
		
		System.out.println("socket Srv Created port ("+listenSocket.getLocalPort()+")");
		
		BufferedReader in;
		FileOutputStream out;
		DataOutputStream dis;
		ObjectInputStream ois;
		
		while((connSocket = listenSocket.accept()) != null){ //Waiting Connection
			System.out.println(connSocket.getInetAddress()+" Client Connected");
			ois = new ObjectInputStream(connSocket.getInputStream());
			
			//authCode , time check
			String authCode = (String)ois.readObject();
			String getTime = (String)ois.readObject();
			
			System.out.println("authCode and getTime :" +authCode +"//"+getTime);
			
			//인증코드 읽고 디렉토리 확인 및 생성
			DirDistributor dd = new DirDistributor(authCode, getTime);
			
			// snapshotDir (스냅샷이 저장 될 디렉토리 세팅 )
			snapshotDir = dd.getImgPath()+"/" ;
			
			
			if(dd.IsFolderExist()){ // 스냅샷 존재시

				
			}else{ // 처음 전송되는 스냅 샷
				// 전송 될 폴더 생성
				dd.mkFolder();
			}
			
			// receive Snapshot Information
			SocketConnector sc = new SocketConnector(connSocket,ois);
			sc.start();
						
			//System.out.println("soc end");
		}
		
	}
	
}
