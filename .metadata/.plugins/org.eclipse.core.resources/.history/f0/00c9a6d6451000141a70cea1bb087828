package com.example.timetraveler;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import net.kkangsworld.lvmexec.pipeWithLVM;
import net.kkangsworld.lvmexec.readHandler;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

public class SrvBackupActivity extends Activity {

	private ArrayList<String> ssStrList ;
	private AlertDialog aDialog;
	private pipeWithLVM pl;
	private readHandler rh;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_srv_backup);
		
		
		rh = new readHandler();
		
		pl = new pipeWithLVM(rh);
		pl.ActionWritePipe("lvs");
		
		rh.readResult();
		
		
		
		File[] ssList = getSnapshotList();
		ssStrList = new ArrayList<String>();
		int idx = 0;
		// Snapshot List read
		for(File f : ssList){
			if(!f.getName().contains("user")){
				idx ++ ;
				ssStrList.add(idx+". "+f.getName());
			}
		}
		
		
		// ssList를 이용하여 View Listing
		ArrayAdapter adapter = new ArrayAdapter<String>(this, 
		        android.R.layout.simple_list_item_1, ssStrList);
		
		ListView lv = (ListView) findViewById(R.id.lv_sList);
		lv.setAdapter(adapter); // set Adapter
		lv.setOnItemClickListener(new OnItemClickListener(){
			@Override
			public void onItemClick(AdapterView<?> arg0, View vv, int itemId,
					long id) {
				// TODO Auto-generated method stub
				
				//  itemId ( 0 부터 등록된 순서대로 읽어들임 )
				
				String ssName = ssStrList.get(itemId); // ssName read
				
				final AlertDialog.Builder adb = new AlertDialog.Builder(vv.getContext());
				adb.setTitle("Notice");
				adb.setMessage("서버에 스냅샷을 전송합니다.");
				aDialog = adb.create();
				
				adb.setPositiveButton("전송시작", new OnClickListener(){
					@Override
					public void onClick(DialogInterface arg0, int arg1) {
						// TODO Auto-generated method stub
						ProgressDialog pd =new ProgressDialog(SrvBackupActivity.this);
						pd.setTitle("전송중 .. ");
						pd.setMessage("Snapshot 을 서버로 전송 중 입니다..");
						pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
						pd.setCancelable(true);
						pd.show();
						// Snapshot Imaging
						
						
						
						
						// Snapshot Send to Server
						
						
						
						
						// confirm 
						
						
						
						// activity end
						
						//finishActivity();
					}
				});
				adb.setNegativeButton("취소", new OnClickListener(){

					@Override
					public void onClick(DialogInterface dialog, int which) {
						// TODO Auto-generated method stub
						setDismiss(aDialog);
					}
					
				});
				
				adb.show();
				
			}
			
			private void setDismiss(Dialog dialog) {
				if (dialog != null && dialog.isShowing())
					dialog.dismiss();
			}
			
		});
		
		
		
		
		
		
		
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.srv_backup, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	
	// Display Snapshot list in device
	
	public File[] getSnapshotList(){
		
		File sHome = new File(MainActivity.homePath);
		File[] sList = sHome.listFiles();
		
		return sList;		
	}
	
	
	/**
	 * back button click
	 */
	@Override
	 public void onBackPressed(){
		
		finish();
		
	 }
	
	public void finishActivity(){

		// Activity finish
		this.finish();
		
	}
	
	
	
}


